Interview Coding Challenge: Word Frequencies

Problem: A fictional client has requested a Node.js server with an API that can compute the top N most frequent (not case sensitive) words in a text file. The API must meet the following specifications:

Inputs: The API must be able to accept a (potentially large) text file and an arbitrary integer N. The inputs will have the following constraints:
* file content will be at maximum 1gb of text content - we will be testing your solution with large files up to this limit
* file content will always be utf8
* n can be any positive integer in the following range: [1, K] where K is the number of unique words in the text file

Outputs: The API is expected to return the top N most frequent words in the text file as JSON.

Example: 

Input: Given N = 3 and a text file with the following contents:
```
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer id purus imperdiet, condimentum enim a, volutpat nisi. Donec ut egestas tellus, sed dignissim lorem. Phasellus tristique ex eu mollis rutrum. Sed interdum eget sapien in placerat. Quisque eu neque euismod, scelerisque mauris at, bibendum tellus. Pellentesque non sem nec dui feugiat posuere. Vivamus ac diam auctor, commodo enim sed, lobortis magna. Nullam nunc risus, hendrerit sed augue ac, imperdiet facilisis libero. Quisque non mollis purus. Nullam vitae ornare lectus, at pellentesque justo. Duis ultrices sem in mi luctus finibus. Ut id ligula ante.

Donec sit amet lacus turpis. Praesent vitae erat ac elit scelerisque faucibus nec sed dui. Suspendisse in imperdiet sapien. Donec efficitur ex lorem, a faucibus urna luctus sit amet. Pellentesque elementum euismod lorem, ac vulputate mauris iaculis quis. Ut in dolor sit amet leo ornare sagittis. Aliquam tincidunt mi vel lacus sodales, in placerat lorem gravida. Maecenas blandit mi auctor fringilla venenatis.

Sed eros justo, tincidunt non ornare at, auctor ut urna. Aliquam pharetra pulvinar sodales. Sed id purus id metus dapibus dignissim quis accumsan eros. Vestibulum et felis quis ex molestie condimentum. Proin ut diam feugiat, elementum felis sit amet, vulputate erat. Nullam quis cursus diam. Sed sit amet feugiat nulla, at semper orci. Suspendisse quis viverra magna. Donec eu tempor lacus. Suspendisse potenti. Quisque a magna non libero finibus accumsan imperdiet eget augue. Nulla elementum vestibulum dolor, ac porttitor dolor congue et. Aliquam cursus tempor erat vel vestibulum.

Quisque tempus velit ac congue porta. Proin sagittis tellus id gravida condimentum. Duis eu efficitur magna. Proin molestie tristique ex, quis rhoncus magna ornare ac. Curabitur et felis id enim pharetra pretium. Integer quis quam sodales, maximus magna id, porttitor mi. Nullam viverra magna sem, ut laoreet dolor mollis sit amet.

Phasellus vel dolor nibh. Nam ut efficitur quam, sed mattis turpis. Curabitur congue id mauris ut vulputate. Donec malesuada lectus at lorem blandit, nec facilisis mauris tincidunt. Suspendisse eget nibh eget elit sodales ullamcorper vitae a nunc. Morbi blandit viverra erat, sit amet fringilla lorem pellentesque id. Etiam sapien nulla, imperdiet vel sem vel, dignissim dapibus nisi. Aliquam erat volutpat. Duis bibendum nisl vitae tristique luctus. Nunc fringilla orci at urna sodales feugiat. Nam id diam auctor est mollis tempor at vitae risus. Nulla posuere mattis nibh, in viverra risus facilisis et. Suspendisse sed posuere mi, sed dictum sem. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Curabitur tristique ex vitae metus ornare, nec feugiat nunc rutrum. Donec commodo vehicula odio, sed faucibus ex tincidunt et.
```

Output: we expect the API to return the following JSON response: 
```
{
    "frequencies": [
        {
            "word": "sed",
            "count": 12
        },
        {
            "word": "id",
            "count": 10
        },
        {
            "word": "sit",
            "count": 8
        }
    ]
}
```
Due Date: 11/29/2021 9:00am EST; please let us know if you want more time

Submission Requirements:
1. Please send us a link to a public repo (github / gitlab / your choice) with the code that solves the problem above.
2. The project readme must at a minimum include instructions for how to run the server and call the endpoint locally. Please include example requests and responses.
3. While we expect this solution to be written in Node.js (preferably Typescript), you may use whichever server-side framework that you feel most comfortable with. You are also free to use node modules and any other resources that you would typical have in a normal work environment to help you solve this problem. 
4. Please include unit tests.
5. Please document any improvements that you did not have time to implement in the readme.

We will be grading your solution based on accuracy, performance, and code quality. Feel free to reach out if you have any questions. We appreciate your interest and look forward to reviewing your code :)